<!--
* Copyright 2013 Stefan Widgren and Maria Noremark,
* National Veterinary Institute, Sweden
*
* Licensed under the EUPL, Version 1.1 or - as soon they
* will be approved by the European Commission - subsequent
* versions of the EUPL (the "Licence");
* You may not use this work except in compliance with the
* Licence.
* You may obtain a copy of the Licence at:
*
* http://ec.europa.eu/idabc/eupl
*
* Unless required by applicable law or agreed to in
* writing, software distributed under the Licence is
* distributed on an "AS IS" basis,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
* express or implied.
* See the Licence for the specific language governing
* permissions and limitations under the Licence.
-->

<<echo=false, results=html>>=
    SummaryTable <- function(contacts, direction) {
        if(identical(direction, 'in')) {
            arrow <- '&larr;'
        } else {
            arrow <- '&rarr;'
        }

        cat('<table border=0>\n', file=.HTML.file)

        for(i in seq_len(nrow(contacts))) {
            cat('<tr>', file=.HTML.file)

            # Pad with empty cells to the left
            cat(paste(rep('<td>&nbsp;</td>', 2L*(contacts$distance[i]-1L)), collapse=''), file=.HTML.file)

            cat(sprintf('<td align="right">%s</td>', contacts$lhs[i]), file=.HTML.file)
            cat(sprintf('<td align="right"><a href="#%s-%s-%s">%s</a></td>', direction, contacts$lhs[i], contacts$rhs[i], arrow), file=.HTML.file)
            cat(sprintf('<td align="right">%s</td>', contacts$rhs[i]), file=.HTML.file)

            # Pad with empty cells to the right
            cat(paste(rep('<td>&nbsp;</td>', 2L*(max(contacts$distance-1L) - (contacts$distance[i]-1L))), collapse=''), file=.HTML.file)

            cat('</tr>\n', file=.HTML.file)
        }

        cat('</table>\n', file=.HTML.file)
    }
@

<<echo=false, results=html>>=
    DetailedTable <- function(contacts, direction) {
        require(plyr)

        if(identical(direction, 'in')) {
            arrow <- '&larr;'
        } else {
            arrow <- '&rarr;'
        }

        contacts <- contacts[order(contacts$t, contacts$id, decreasing=FALSE),]

        contacts$id <- as.character(contacts$id)
        contacts$id[is.na(contacts$id)] <- '&nbsp;'

        contacts$n <- as.character(contacts$n)
        contacts$n[is.na(contacts$n)] <- '&nbsp;'

        contacts$category <- as.character(contacts$category)
        contacts$category[is.na(contacts$category)] <- '&nbsp;'

        ddply(contacts, c('lhs', 'rhs'), .fun=function(x) {
            cat('<p>', file=.HTML.file)

            # Create the lhs to/from rhs title and add the name of the href link
            cat(sprintf('<h3><a name="%s-%s-%s">%s %s %s</a></h3>', direction, x$lhs[1], x$rhs[1], x$lhs[1], arrow, x$rhs[1]), file=.HTML.file)

            cat('<table border=1>\n', file=.HTML.file)

            # Header
            cat('<tr><th>Date</th><th>Id</th><th>N</th><th>Category</th><th>Source</th><th>Destination</th></tr>', file=.HTML.file)

            for(i in seq_len(nrow(x))) {
                cat('<tr>', file=.HTML.file)

                cat(sprintf('<td align="right">%s</td>', x$t[i]), file=.HTML.file)
                cat(sprintf('<td align="right">%s</td>', x$id[i]), file=.HTML.file)
                cat(sprintf('<td align="right">%s</td>', x$n[i]), file=.HTML.file)
                cat(sprintf('<td align="right">%s</td>', x$category[i]), file=.HTML.file)
                cat(sprintf('<td align="right">%s</td>', x$source[i]), file=.HTML.file)
                cat(sprintf('<td align="right">%s</td>', x$destination[i]), file=.HTML.file)

                cat('</tr>\n', file=.HTML.file)
            }

            cat('</table>\n', file=.HTML.file)
            cat('</p>', file=.HTML.file)
        })
    }
@

<html>

<head>
<title>\Sexpr{ReportObject()@root}</title>
</head>

<body>

<h1 align='center'>Contact Tracing</h1>
<h1 align='center'>Root: \Sexpr{ReportObject()@root}</h1>
<h3 align='center'>EpiContactTrace</h3>
<h3 align='center'>Version: \Sexpr{packageVersion('EpiContactTrace')}</h3>

<hr/>

<h2>Summary ingoing contacts</h2>

<p>
<table border=0>
<tr><td>In begin date:</td><td>\Sexpr{ReportObject()@ingoingContacts@tBegin}</td></tr>
<tr><td>In end date:</td><td>\Sexpr{ReportObject()@ingoingContacts@tEnd}</td></tr>
<tr><td>In days:</td><td>\Sexpr{ReportObject()@ingoingContacts@tEnd - ReportObject()@ingoingContacts@tBegin}</td></tr>
<tr><td>In degree:</td><td>\Sexpr{InDegree(ReportObject()@ingoingContacts)}</td></tr>
<tr><td>Ingoing contact chain:</td><td>\Sexpr{IngoingContactChain(ReportObject()@ingoingContacts)}</td></tr>
</table>
</p>

<<echo=false, results=html>>=
    if(length(ReportObject()@ingoingContacts@source) > 0L) {
        # Get network structure. The distance is used for indentation.
        df <- NetworkStructure(ReportObject()@ingoingContacts)

        # Add lhs and rhs, with respect to direction
        df$rhs <- df$source
        df$lhs <- df$destination

        SummaryTable(df, 'in')
    } else {
        cat("<p>No ingoing contacts during the search period.</p>\n", file=.HTML.file)
    }
@

<hr/>

<h2>Summary outgoing contacts</h2>

<p>
<table border=0>
<tr><td>Out begin date:</td><td>\Sexpr{ReportObject()@outgoingContacts@tBegin}</td></tr>
<tr><td>Out end date:</td><td>\Sexpr{ReportObject()@outgoingContacts@tEnd}</td></tr>
<tr><td>Out days:</td><td>\Sexpr{ReportObject()@outgoingContacts@tEnd - ReportObject()@outgoingContacts@tBegin}</td></tr>
<tr><td>Out degree:</td><td>\Sexpr{OutDegree(ReportObject()@outgoingContacts)}</td></tr>
<tr><td>Outgoing contact chain:</td><td>\Sexpr{OutgoingContactChain(ReportObject()@outgoingContacts)}</td></tr>
</table>
</p>

<<echo=false, results=html>>=
    if(length(ReportObject()@outgoingContacts@source) > 0L) {
        # Get network structure. The distance is used for indentation.
        df <- NetworkStructure(ReportObject()@outgoingContacts)

        # Add lhs and rhs, with respect to direction
        df$lhs <- df$source
        df$rhs <- df$destination

        SummaryTable(df, 'out')
    } else {
        cat("<p>No outgoing contacts during the search period.</p>\n", file=.HTML.file)
    }
@

<<echo=false, results=html>>=
    if(length(ReportObject()@ingoingContacts@source) > 0L) {
        cat('<hr/>', file=.HTML.file)

        cat('<h2>Direct ingoing contacts</h2>', file=.HTML.file)

        df <- as(ReportObject()@ingoingContacts, 'data.frame')

        # Add lhs and rhs, with respect to direction
        df$lhs <- df$destination
        df$rhs <- df$source

        DetailedTable(df[df$destination == df$root,], 'in')

        df <- df[df$destination != df$root,]
        if(nrow(df) > 0) {
            cat('<hr/>', file=.HTML.file)
            cat('<h2>Indirect ingoing contacts</h2>', file=.HTML.file)

            DetailedTable(df, 'in')
        }
    }
@

<<echo=false, results=html>>=
    if(length(ReportObject()@outgoingContacts@source) > 0L) {
        cat('<hr/>', file=.HTML.file)

        cat('<h2>Direct outgoing contacts</h2>', file=.HTML.file)

        df <- as(ReportObject()@outgoingContacts, 'data.frame')

        # Add lhs and rhs, with respect to direction
        df$lhs <- df$source
        df$rhs <- df$destination

        DetailedTable(df[df$source == df$root,], 'out')

        df <- df[df$source != df$root,]
        if(nrow(df) > 0) {
            cat('<hr/>', file=.HTML.file)
            cat('<h2>Indirect outgoing contacts</h2>', file=.HTML.file)

            DetailedTable(df, 'out')
        }
    }
@

<hr/>

<h5>Generated \Sexpr{Sys.time()} by EpiContactTrace version \Sexpr{packageVersion('EpiContactTrace')}</h5>
</body>

</html>
